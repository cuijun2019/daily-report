<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Dao接口 -->
<mapper namespace="com.etone.project.modules.lte.dao.LteCommentMapper">

    <select id="queryArticle" parameterType="com.etone.project.core.model.QueryCriteria" resultType="java.util.Map">
        select * from
        (SELECT
        t1.id,t1.studentNo,t1.studentName,t1.article,t1.createTime,
        (select GROUP_CONCAT(i.recordAddress) from record_info i where i.readAloudId = t1.id) recordAddress,
        (select count(1) from thumbsup_info o where o.readAloudId = t1.id) thumbsupCount,
        (select count(1) from comment_info o where o.readAloudId = t1.id) commentCount,
        (select u.headPortraitAddress from tbUser u where u.vcAccount = t1.studentNo) headPortraitAddress,
        1 isRead
        FROM
        read_aloud_info t1
        union all
        SELECT
        t2.id,t2.studentNo,t2.studentName,t2.article,t2.createTime,'' recordAddress,
        (select count(1) from thumbsup_info o where o.readId = t2.id) thumbsupCount,
        (select count(1) from comment_info o where o.readId = t2.id) commentCount,
        (select u.headPortraitAddress from tbUser u where u.vcAccount = t2.studentNo) headPortraitAddress,
        2 isRead
        FROM
        read_info t2
        ) a
        where 1=1
        <if test="condition.startDate != null and condition.startDate != '' and condition.startDate != 'null' and condition.startDate != 'undefined'" >
            <![CDATA[ and a.createTime >= '${condition.startDate}' ]]>
        </if>
        <if test="condition.endDate != null and condition.endDate != '' and condition.endDate != 'null' and condition.endDate != 'undefined'" >
            <![CDATA[ and a.createTime <= '${condition.endDate}' ]]>
        </if>
        <if test="condition.searchContext != null and condition.searchContext != '' and condition.searchContext != 'null' and condition.searchContext != 'undefined'" >
            and (a.studentName like '%${condition.searchContext}%' or a.article like '%${condition.searchContext}%')
        </if>
        order by a.createTime desc,a.studentNo desc
        <if test="condition.rowStart != null and condition.pageSize != null" >
          LIMIT ${condition.rowStart}, ${condition.pageSize}
        </if>
    </select>

    <select id="queryComment" parameterType="com.etone.project.core.model.QueryCriteria" resultType="java.util.Map">
        select i.*,
        <if test="condition.isRead == '1'.toString()">
            (select group_concat(o.thumbsUpPerson) from thumbsup_info o where o.readAloudId = i.readAloudId) thumbsup
            from comment_info i where i.readAloudId = '${condition.readAloudId}'
        </if>
        <if test="condition.isRead == '2'.toString()">
            (select group_concat(o.thumbsUpPerson) from thumbsup_info o where o.readId = i.readId) thumbsup
            from comment_info i where i.readId = '${condition.readAloudId}'
        </if>
         order by i.commentTime desc
    </select>

    <select id="queryThumbsup" parameterType="com.etone.project.core.model.QueryCriteria" resultType="java.util.Map">
        select group_concat(o.thumbsUpPerson) thumbsup from thumbsup_info o where
        <if test="condition.isRead == '1'.toString()">
            o.readAloudId = '${condition.readAloudId}'
        </if>
        <if test="condition.isRead == '2'.toString()">
            o.readId = '${condition.readAloudId}'
        </if>
    </select>

    <select id="validThumbSup" parameterType="com.etone.project.core.model.QueryCriteria" resultType="java.lang.Integer">
        select count(1) from thumbsup_info i
        where i.thumbsUpPersonCode='${condition.thumbsUpPersonCode}'
        <if test="condition.isRead == '1'.toString()">
            and i.readAloudId='${condition.readAloudId}'
        </if>
        <if test="condition.isRead == '2'.toString()">
            and i.readId='${condition.readAloudId}'
        </if>
    </select>

    <insert id="insertThumbSup" parameterType="com.etone.project.core.model.QueryCriteria">
        INSERT INTO thumbsup_info (
            id,
            thumbsUpPerson,
            studentNo,
            studentName,
            article,
            toCommentPerson,
            commentTime,
            createTime,
            readAloudId,
            thumbsUpPersonCode
        ) SELECT
            NULL,
            '${condition.thumbsUpPerson}',
            i.studentNo,
            i.studentName,
            i.article,
            '',
            NULL,
            NOW(),
            '${condition.readAloudId}',
            '${condition.thumbsUpPersonCode}'
        FROM
            read_aloud_info i
        WHERE
            i.id = '${condition.readAloudId}'
    </insert>

    <insert id="insertReadThumbSup" parameterType="com.etone.project.core.model.QueryCriteria">
        INSERT INTO thumbsup_info (
            id,
            thumbsUpPerson,
            studentNo,
            studentName,
            article,
            toCommentPerson,
            commentTime,
            createTime,
            readId,
            thumbsUpPersonCode
        ) SELECT
            NULL,
            '${condition.thumbsUpPerson}',
            i.studentNo,
            i.studentName,
            i.article,
            '',
            NULL,
            NOW(),
            '${condition.readAloudId}',
            '${condition.thumbsUpPersonCode}'
        FROM
            read_info i
        WHERE
            i.id = '${condition.readAloudId}'
    </insert>

    <select id="deleteThumbSup" parameterType="com.etone.project.core.model.QueryCriteria">
        delete from thumbsup_info
        where thumbsUpPersonCode = '${condition.thumbsUpPersonCode}'
        <if test="condition.isRead == '1'.toString()">
            and readAloudId='${condition.readAloudId}'
        </if>
        <if test="condition.isRead == '2'.toString()">
            and readId='${condition.readAloudId}'
        </if>
    </select>

    <insert id="saveReadAloudInfo" parameterType="com.etone.project.core.model.QueryCriteria">
        insert into read_aloud_info (id,
        studentNo,
        studentName,
        article,
        createTime,
        isEditable
        )
        values
        (
        null,
        '${condition.studentNo}',
        '${condition.studentName}',
        '${condition.article}',
        now(),
        '${condition.isEditable}'
        )
    </insert>

    <insert id="saveReadInfo" parameterType="com.etone.project.core.model.QueryCriteria">
        insert into read_info (id,
        studentNo,
        studentName,
        article,
        thought,
        createTime
        )
        values
        (
        null,
        '${condition.studentNo}',
        '${condition.studentName}',
        '${condition.article}',
        '${condition.thought}',
        now()
        )
    </insert>

    <insert id="insertComment" parameterType="com.etone.project.core.model.QueryCriteria">
        insert into comment_info (id,
        commentPersonCode,
        commentPerson,
        commentTime,
        commentContent,
        readAloudId
        )
        values
        (
        null,
        '${condition.commentPersonCode}',
        '${condition.commentPerson}',
        now(),
        '${condition.commentContent}',
        '${condition.readAloudId}'
        )
    </insert>

    <insert id="insertReadComment" parameterType="com.etone.project.core.model.QueryCriteria">
        insert into comment_info (id,
        commentPersonCode,
        commentPerson,
        commentTime,
        commentContent,
        readId
        )
        values
        (
        null,
        '${condition.commentPersonCode}',
        '${condition.commentPerson}',
        now(),
        '${condition.commentContent}',
        '${condition.readAloudId}'
        )
    </insert>

    <insert id="saveRecordInfo" parameterType="com.etone.project.core.model.QueryCriteria">
        insert into record_info
        select
            null,
            '${condition.recordAddress}',
            '${condition.createTime}',
            id
        from read_aloud_info
          where studentNo='${condition.studentNo}'
          and studentName='${condition.studentName}'
          and article='${condition.article}'
          order by createTime desc
          limit 1
    </insert>

    <select id="queryAudio" parameterType="com.etone.project.core.model.QueryCriteria" resultType="java.util.Map">
        SELECT
            r.*,
            i.studentNo,
            i.studentName,
            i.article,
            i.isEditable
        FROM
            record_info r,
            read_aloud_info i
        WHERE
            r.readAloudId = i.id
        AND date_format(i.createTime, '%Y-%m-%d') = '${condition.date}'
        and i.studentNo = '${condition.account}'
        order by r.createTime
    </select>

    <select id="validReadAloudInfo" parameterType="com.etone.project.core.model.QueryCriteria" resultType="java.lang.String">
        select i.id from read_aloud_info i
        where date_format(i.createTime, '%Y-%m-%d') = '${condition.date}'
        and i.studentNo = '${condition.studentNo}'
    </select>

    <select id="deleteRecordInfo" parameterType="java.lang.Integer">
        delete from record_info where readAloudId = #{id}
    </select>

    <select id="updateReadAloudInfo" parameterType="com.etone.project.core.model.QueryCriteria">
        update read_aloud_info
        set article='${condition.article}',
             isEditable = '${condition.isEditable}'
        where id = '${condition.id}'
    </select>

    <select id="countSameComment" parameterType="com.etone.project.core.model.QueryCriteria" resultType="java.lang.Integer">
        select count(1) from comment_info
        where readAloudId = '${condition.readAloudId}'
          and commentContent = '${condition.commentContent}'
          and commentPersonCode = '${condition.commentPersonCode}'
    </select>

    <select id="queryReadStatistics" parameterType="com.etone.project.core.model.QueryCriteria" resultType="java.util.Map">
        SELECT
            (
                (SELECT count(1) FROM tbUser u) - count(1)
            ) count,
            date_format(i.createTime, '%Y-%m-%d') createTime
        FROM
            read_info i where 1=1
            <if test="condition.startDate != null and condition.startDate != '' and condition.startDate != 'null' and condition.startDate != 'undefined'" >
                <![CDATA[ and date_format(i.createTime, '%Y-%m-%d') >= '${condition.startDate}' ]]>
            </if>
            <if test="condition.endDate != null and condition.endDate != '' and condition.endDate != 'null' and condition.endDate != 'undefined'" >
                <![CDATA[ and date_format(i.createTime, '%Y-%m-%d') <= '${condition.endDate}' ]]>
            </if>
        GROUP BY
            date_format(i.createTime, '%Y-%m-%d')
        order by i.createTime desc
    </select>

    <select id="queryReadAloudStatistics" parameterType="com.etone.project.core.model.QueryCriteria" resultType="java.util.Map">
        SELECT
            (
            (SELECT count(1) FROM tbUser u) - count(1)
            ) count,
            date_format(i.createTime, '%Y-%m-%d') createTime
        FROM
            read_aloud_info i where 1=1
            <if test="condition.startDate != null and condition.startDate != '' and condition.startDate != 'null' and condition.startDate != 'undefined'" >
                <![CDATA[ and date_format(i.createTime, '%Y-%m-%d') >= '${condition.startDate}' ]]>
            </if>
            <if test="condition.endDate != null and condition.endDate != '' and condition.endDate != 'null' and condition.endDate != 'undefined'" >
                <![CDATA[ and date_format(i.createTime, '%Y-%m-%d') <= '${condition.endDate}' ]]>
            </if>
        GROUP BY
            date_format(i.createTime, '%Y-%m-%d')
        order by i.createTime desc
    </select>

    <select id="queryCommentStatistics" parameterType="com.etone.project.core.model.QueryCriteria" resultType="java.util.Map">
        SELECT
            (
            (SELECT count(1) FROM tbUser u) - count(1)
            ) count,
            date_format(i.commentTime, '%Y-%m-%d') createTime
        FROM
            comment_info i where 1=1
            <if test="condition.startDate != null and condition.startDate != '' and condition.startDate != 'null' and condition.startDate != 'undefined'" >
                <![CDATA[ and date_format(i.commentTime, '%Y-%m-%d') >= '${condition.startDate}' ]]>
            </if>
            <if test="condition.endDate != null and condition.endDate != '' and condition.endDate != 'null' and condition.endDate != 'undefined'" >
                <![CDATA[ and date_format(i.commentTime, '%Y-%m-%d') <= '${condition.endDate}' ]]>
            </if>
        GROUP BY
            date_format(i.commentTime, '%Y-%m-%d')
        order by i.commentTime desc
    </select>

    <select id="queryReadTime" parameterType="com.etone.project.core.model.QueryCriteria" resultType="java.lang.String">
        select group_concat(cast(c.createTime as char)) from
        (SELECT
        (
        (SELECT count(1) FROM tbUser u) - count(1)
        ) count,
        date_format(i.createTime, '%Y-%m-%d') createTime
        FROM
        read_info i where 1=1
        <if test="condition.startDate != null and condition.startDate != '' and condition.startDate != 'null' and condition.startDate != 'undefined'" >
            <![CDATA[ and date_format(i.createTime, '%Y-%m-%d') >= '${condition.startDate}' ]]>
        </if>
        <if test="condition.endDate != null and condition.endDate != '' and condition.endDate != 'null' and condition.endDate != 'undefined'" >
            <![CDATA[ and date_format(i.createTime, '%Y-%m-%d') <= '${condition.endDate}' ]]>
        </if>
        GROUP BY
        date_format(i.createTime, '%Y-%m-%d')
        order by i.createTime desc) c
    </select>

    <select id="queryReadAloudTime" parameterType="com.etone.project.core.model.QueryCriteria" resultType="java.lang.String">
        select group_concat(cast(c.createTime as char)) from
        (SELECT
        (
        (SELECT count(1) FROM tbUser u) - count(1)
        ) count,
        date_format(i.createTime, '%Y-%m-%d') createTime
        FROM
        read_aloud_info i where 1=1
        <if test="condition.startDate != null and condition.startDate != '' and condition.startDate != 'null' and condition.startDate != 'undefined'" >
            <![CDATA[ and date_format(i.createTime, '%Y-%m-%d') >= '${condition.startDate}' ]]>
        </if>
        <if test="condition.endDate != null and condition.endDate != '' and condition.endDate != 'null' and condition.endDate != 'undefined'" >
            <![CDATA[ and date_format(i.createTime, '%Y-%m-%d') <= '${condition.endDate}' ]]>
        </if>
        GROUP BY
        date_format(i.createTime, '%Y-%m-%d')
        order by i.createTime desc) c
    </select>

    <select id="queryCommentTime" parameterType="com.etone.project.core.model.QueryCriteria" resultType="java.lang.String">
        select group_concat(cast(c.createTime as char)) from
        (SELECT
        (
        (SELECT count(1) FROM tbUser u) - count(1)
        ) count,
        date_format(i.commentTime, '%Y-%m-%d') createTime
        FROM
        comment_info i where 1=1
        <if test="condition.startDate != null and condition.startDate != '' and condition.startDate != 'null' and condition.startDate != 'undefined'" >
            <![CDATA[ and date_format(i.commentTime, '%Y-%m-%d') >= '${condition.startDate}' ]]>
        </if>
        <if test="condition.endDate != null and condition.endDate != '' and condition.endDate != 'null' and condition.endDate != 'undefined'" >
            <![CDATA[ and date_format(i.commentTime, '%Y-%m-%d') <= '${condition.endDate}' ]]>
        </if>
        GROUP BY
        date_format(i.commentTime, '%Y-%m-%d')
        order by i.commentTime desc) c
    </select>

    <select id="countUser" resultType="java.lang.Integer">
        select count(1) from tbUser
    </select>

    <select id="queryReadUnfinishUser" parameterType="java.lang.String" resultType="java.lang.String">
        SELECT
            group_concat(
                cast(u.vcFullName AS CHAR)
                ORDER BY
                    u.vcAccount
            )
        FROM
            tbUser u
        WHERE
            NOT EXISTS (
                SELECT
                    1
                FROM
                    read_info i
                WHERE
                    i.studentNo = u.vcAccount
                AND date_format(i.createTime, '%Y-%m-%d') = #{createTime}
            )
    </select>

    <select id="queryAloudUnfinishUser" parameterType="java.lang.String" resultType="java.lang.String">
        SELECT
            group_concat(
                cast(u.vcFullName AS CHAR)
                ORDER BY
                    u.vcAccount
            )
        FROM
            tbUser u
        WHERE
            NOT EXISTS (
                SELECT
                    1
                FROM
                    read_aloud_info i
                WHERE
                    i.studentNo = u.vcAccount
                AND date_format(i.createTime, '%Y-%m-%d') = #{createTime}
            )
    </select>

    <select id="queryCommentUnfinishUser" parameterType="java.lang.String" resultType="java.lang.String">
        SELECT
            group_concat(
                cast(u.vcFullName AS CHAR)
                ORDER BY
                    u.vcAccount
            )
        FROM
            tbUser u
        WHERE
            NOT EXISTS (
                SELECT
                    1
                FROM
                    comment_info i
                WHERE
                    i.commentPersonCode = u.vcAccount
                AND date_format(i.commentTime, '%Y-%m-%d') = #{createTime}
            )
    </select>

    <select id="deleteComment" parameterType="com.etone.project.core.model.QueryCriteria">
        delete from comment_info where commentTime = '${condition.commentTime}'
        and commentPersonCode = '${condition.commentPersonCode}'
    </select>

    <select id="queryReadInfo" parameterType="com.etone.project.core.model.QueryCriteria" resultType="java.util.Map">
        select * from read_info
        where 1 = 1
        <if test="condition.startDate != null and condition.startDate != '' and condition.startDate != 'null' and condition.startDate != 'undefined'" >
            <![CDATA[ and createTime >= '${condition.startDate}' ]]>
        </if>
        <if test="condition.endDate != null and condition.endDate != '' and condition.endDate != 'null' and condition.endDate != 'undefined'" >
            <![CDATA[ and createTime <= '${condition.endDate}' ]]>
        </if>
        <if test="condition.studentNo != null and condition.studentNo != '' and condition.studentNo != 'null' and condition.studentNo != 'undefined'" >
            and studentNo = '${condition.studentNo}'
        </if>
        order by createTime desc
    </select>

    <select id="queryReadAloudInfo" parameterType="com.etone.project.core.model.QueryCriteria" resultType="java.util.Map">
        select
        t1.id,t1.studentNo,t1.studentName,t1.article,t1.createTime,
        (select GROUP_CONCAT(i.recordAddress) from record_info i where i.readAloudId = t1.id) recordAddress
        from read_aloud_info t1
        where 1 = 1
        <if test="condition.startDate != null and condition.startDate != '' and condition.startDate != 'null' and condition.startDate != 'undefined'" >
            <![CDATA[ and createTime >= '${condition.startDate}' ]]>
        </if>
        <if test="condition.endDate != null and condition.endDate != '' and condition.endDate != 'null' and condition.endDate != 'undefined'" >
            <![CDATA[ and createTime <= '${condition.endDate}' ]]>
        </if>
        <if test="condition.studentNo != null and condition.studentNo != '' and condition.studentNo != 'null' and condition.studentNo != 'undefined'" >
            and studentNo = '${condition.studentNo}'
        </if>
        order by createTime desc
    </select>

    <select id="queryCommentInfo" parameterType="com.etone.project.core.model.QueryCriteria" resultType="java.util.Map">
        select a.*,(select u.headPortraitAddress from tbUser u where u.vcAccount = a.studentNo) headPortraitAddress from
        (SELECT
            id,
            commentPersonCode,
            commentPerson,
            commentTime,
            case when (select count(1) from read_aloud_info i where i.id = readAloudId) > 0 then
            (select i.studentNo from read_aloud_info i where i.id = readAloudId) else
            (select i.studentNo from read_info i where i.id = readAloudId) end studentNo,
            case when (select count(1) from read_aloud_info i where i.id = readAloudId) > 0 then
            (select i.studentName from read_aloud_info i where i.id = readAloudId) else
            (select i.studentName from read_info i where i.id = readAloudId) end studentName,
            commentContent,
            case when (select count(1) from read_aloud_info i where i.id = readAloudId) > 0 then
            (select i.article from read_aloud_info i where i.id = readAloudId) else
            (select i.article from read_info i where i.id = readAloudId) end article,
            case when (select count(1) from read_aloud_info i where i.id = readAloudId) > 0 then
            (select i.createTime from read_aloud_info i where i.id = readAloudId) else
            (select i.createTime from read_info i where i.id = readAloudId) end createTime,
            (select count(1) from read_aloud_info i where i.id = readAloudId) count
        FROM
        comment_info) a
        where 1 = 1
        <if test="condition.startDate != null and condition.startDate != '' and condition.startDate != 'null' and condition.startDate != 'undefined'" >
            <![CDATA[ and commentTime >= '${condition.startDate}' ]]>
        </if>
        <if test="condition.endDate != null and condition.endDate != '' and condition.endDate != 'null' and condition.endDate != 'undefined'" >
            <![CDATA[ and commentTime <= '${condition.endDate}' ]]>
        </if>
        <if test="condition.studentNo != null and condition.studentNo != '' and condition.studentNo != 'null' and condition.studentNo != 'undefined'" >
            and commentPersonCode = '${condition.studentNo}'
        </if>
        order by commentTime desc
    </select>

    <select id="setUserLocalId" parameterType="com.etone.project.core.model.QueryCriteria">
        update tbUser set localId='${condition.localId}',headPortraitAddress=''
        where bigId = '${condition.userId}'
    </select>

    <select id="updatePictureAddress" parameterType="com.etone.project.core.model.QueryCriteria">
        update tbUser set serverId='${condition.serverIds}',headPortraitAddress='${condition.filePath}'
        where bigId = '${condition.userId}'
    </select>

    <select id="findHeadPortraitAddress" parameterType="java.lang.String" resultType="java.lang.String">
        select headPortraitAddress from tbUser where vcAccount=#{account}
    </select>
</mapper>