<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:jee="http://www.springframework.org/schema/jee"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd

		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd"
       default-lazy-init="true">

    <description>Spring公共配置</description>

    <!-- 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入 -->
    <context:component-scan base-package="com.etone.project">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>

    <!-- MyBatis配置, 多个数据源需要配置多套 SqlSessionFactoryBean 及 MapperScannerConfigurer-->
   	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
   		<property name="dataSource" ref="baseDataSource" />
   		<!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置 -->
   		<property name="typeAliasesPackage" value="com.etone.project.base.entity,com.etone.project.modules.lte.entity,com.etone.project.modules.dbimp.entity" />
   		<!-- 显式指定Mapper文件位置 -->
   		<property name="mapperLocations" value="classpath:/mapper/mysql/*Mapper.xml" />
   	</bean>
   	<!-- 扫描basePackage下所有以@MyBatisRepository标识的 接口-->
   	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
   		<property name="basePackage" value="com.etone.project.base,com.etone.project.modules.lte.dao,com.etone.project.modules.dbimp.dao" />
   		<!-- <property name="annotationClass" value="com.etone.ee.modules.persistence.MyBatisRepository"/> -->
   	</bean>

    <!-- JPA Entity Manager 配置 -->
    <bean id="auditEntityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="baseDataSource"/>
        <property name="jpaVendorAdapter" ref="auditHibernateJpaVendorAdapter"/>
        <property name="packagesToScan" value="com.etone.project.**.entity"/>
        <property name="jpaProperties">
            <props>
                <!-- 缓存 -->
                <!--<prop key="hibernate.cache.use_second_level_cache">true</prop>-->
                <!--<prop key="hibernate.cache.use_query_cache">true</prop>-->
                <!--<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.EhCacheRegionFactory</prop>-->
                <!--<prop key="net.sf.ehcache.configurationResourceName">ehcache/ehcache-hibernate-local.xml</prop>-->

                <!-- 命名规则 MY_NAME->MyName FOR ORACLE -->
                <!--<prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>-->

                <!-- 调试 -->
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.format_sql">false</prop>
                <prop key="hibernate.use_sql_comments">false</prop>
                <prop key="hibernate.generate_statistics">true</prop>

                <!-- 其它 -->
                <!--<prop key="javax.persistence.transactionType">JTA</prop>-->
            </props>
        </property>
    </bean>

    <bean id="auditHibernateJpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
        <property name="databasePlatform">
            <bean factory-method="getDialect" class="com.etone.ee.modules.persistence.Hibernates">
                <constructor-arg ref="baseDataSource"/>
            </bean>
        </property>
    </bean>

    <!-- JTA 事务配置, 针对Tomcat, Jetty等WEB容器，若使用Weblogic, JBoss, GlassFish等应用服务器，可以注释atomikos部分  -->
    <bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager" init-method="init" destroy-method="close">
   		<property name="forceShutdown" value="false" />
   	</bean>

   	<bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.J2eeUserTransaction">
   		<property name="transactionTimeout" value="300" />
   	</bean>

    <bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager" depends-on="atomikosTransactionManager,atomikosUserTransaction">
   		<property name="transactionManager" ref="atomikosTransactionManager" />
   		<property name="userTransaction" ref="atomikosUserTransaction" />
   		<property name="allowCustomIsolationLevels" value="true" />
   	</bean>

    <!-- Spring Data JPA配置 -->
    <jpa:repositories base-package="com.etone.project.**.dao" transaction-manager-ref="transactionManager" entity-manager-factory-ref="auditEntityManagerFactory"/>
    <!--<jpa:repositories base-package="com.etone.project.modules.**.dao" transaction-manager-ref="transactionManager" entity-manager-factory-ref="projectEntityManagerFactory"/>-->

    <!-- 定义事务配置, annotation-driven 与 jta-transaction-manager 二选其一  -->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>
    <!--<tx:jta-transaction-manager />-->

    <!-- JSR303 Validator定义 -->
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/>

    <!-- 数据源配置,使用应用服务器的数据库连接池 -->
    <!-- 基础数据库 -->
    <jee:jndi-lookup id="baseDataSource" jndi-name="java:comp/env/jdbc/base"/>
    <!-- 业务数据库 -->
    <!--<jee:jndi-lookup id="projectDataSource" jndi-name="java:comp/env/jdbc/project"/>-->
    <!-- 工作流数据库 -->
    <!--<jee:jndi-lookup id="jbpmDataSource" jndi-name="java:comp/env/jdbc/jbpm"/>-->

    <!-- 数据库元数据扫描工具 -->
    <bean id="metaScanner" class="com.etone.project.base.support.meta.MetaScanner" scope="singleton">
        <!-- 多个数据源以逗号分隔, 格式：数据源1:数据库1|数据库2|..|数据库n,数据源2:数据库1|数据库2|..|数据库n -->
        <property name="scan" value="baseDataSource:base"/>
    </bean>
    
    
    <!-- 文件上传 -->
    <bean id="multipartResolver"  
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver" scope="singleton">  
    <!-- 设置上传文件的最大尺寸为1MB -->  
        <property name="maxUploadSize">  
            <value>10048576</value>  
        </property>  
    </bean>

    <!-- 个性化配置 : BEGIN -->
    <!-- 生产环境 : 如JBoss、Weblogic、Linux -->
    <beans profile="production">
        <context:property-placeholder ignore-unresolvable="true" location="classpath*:/application.properties"/>
    </beans>

    <!-- 本地开发环境 : 如Jetty、Tomcat、Windows -->
    <beans profile="development">
        <context:property-placeholder ignore-resource-not-found="true"
                                      location="classpath*:/application.properties,
                                      classpath*:/application.development.properties"/>
    </beans>
    <!-- 个性化配置 : END -->
</beans>